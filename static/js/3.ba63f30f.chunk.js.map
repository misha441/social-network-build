{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHook","props","useState","editMode","setEditMode","status","setStatus","useEffect","statusBlockEditingPermission","isOwner","className","styles","profileStatus","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","onSubmit","handleSubmit","s","profileIcon","icon","faSave","fixedWidth","error","profileContacts__title","profileData","Field","component","Input","name","placeholder","Textarea","type","profileContacts","Object","keys","profile","contacts","map","key","contactTitle","contactValue","Post","item","postContent","src","alt","postMessage","message","likes","MyPosts","React","memo","postElements","posts","p","likesCount","id","PostBlock","AddNewPostReduxForm","values","addPost","newPostBody","maxLength200","maxLengthCreator","validate","required","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","ProfileData","onClick","goToEditMode","faEdit","profileData__userInfo","aboutMe","lookingForAJob","lookingForAJobDescription","Contacts","ProfileInfo","Preloader","descriptionBlock","descriptionBlock__avatarBlockWrapper","descriptionBlock__avatarBlock","descriptionBlock__imageWrapper","photos","large","userIcon","descriptionBlock__image","descriptionBlock__fullName","fullName","changePhotoButton","target","files","length","savePhoto","descriptionBlock__Info","descriptionBlock__mainInfo","initialValues","formData","saveProfile","then","Profile","ProfileContainer","userId","this","match","params","autorisedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.ba63f30f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileImg\":\"ProfileInfo_profileImg__iFrgN\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__umCRg\",\"descriptionBlock__avatarBlockWrapper\":\"ProfileInfo_descriptionBlock__avatarBlockWrapper__oMbyw\",\"descriptionBlock__avatarBlock\":\"ProfileInfo_descriptionBlock__avatarBlock__3mcrx\",\"changePhotoButton\":\"ProfileInfo_changePhotoButton__2g6H-\",\"descriptionBlock__image\":\"ProfileInfo_descriptionBlock__image__3xqH8\",\"descriptionBlock__imageWrapper\":\"ProfileInfo_descriptionBlock__imageWrapper__3ob0U\",\"descriptionBlock__Info\":\"ProfileInfo_descriptionBlock__Info__2IW_S\",\"error\":\"ProfileInfo_error__ZqK4N\",\"descriptionBlock__mainInfo\":\"ProfileInfo_descriptionBlock__mainInfo__3Tcpj\",\"descriptionBlock__fullName\":\"ProfileInfo_descriptionBlock__fullName__JhHVT\",\"profileStatus\":\"ProfileInfo_profileStatus__fwnzj\",\"profileData\":\"ProfileInfo_profileData__VqpKv\",\"profileIcon\":\"ProfileInfo_profileIcon__k-pCd\",\"profileData__userInfo\":\"ProfileInfo_profileData__userInfo__14lKe\",\"profileContacts__title\":\"ProfileInfo_profileContacts__title__Og-_X\",\"profileContacts\":\"ProfileInfo_profileContacts__3-DDB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostBlock\":\"MyPosts_PostBlock__Vk9t9\",\"newPostBody\":\"MyPosts_newPostBody__3veDF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__RthBI\",\"postContent\":\"Post_postContent__K4rO1\",\"postMessage\":\"Post_postMessage__YORA5\"};","import React, {useState, useEffect} from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n\r\n    let [editMode,setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },[props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    const statusBlockEditingPermission = props.isOwner\r\n        ? <div className={styles.profileStatus}>\r\n            <div  onDoubleClick={activateEditMode}>{props.status || '-------'}</div>\r\n        </div>\r\n        :<div className={styles.profileStatus}>\r\n            <div>{props.status || '-------'}</div>\r\n        </div> ;\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? statusBlockEditingPermission\r\n                : <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHook;","import React from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../common/formControls/FormControls\";\r\nimport {Contacts} from \"./ProfileInfo\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><button className={'buttonStyle'}>\r\n                <FontAwesomeIcon className={s.profileIcon} icon={faSave} fixedWidth />\r\n                save\r\n            </button></div>\r\n            <div>{props.error}</div>\r\n\r\n            <div className={s.profileContacts__title}>Main Information :</div>\r\n            <hr/>\r\n            <div className={s.profileData}>\r\n                <div>\r\n                    <div><span>Full name:</span></div>\r\n                    <div><Field component={Input} name={'fullName'} placeholder={'Full name'}  /></div>\r\n                </div>\r\n                <div><div><span>About Me:</span></div>\r\n                    <div>\r\n                        <Field component={Textarea}\r\n                               name={'aboutMe'}\r\n                               placeholder={'About Me'}  /></div>\r\n                    </div>\r\n                <div>\r\n                    <div><span>Looking for a job : </span></div>\r\n                    <div><Field component={Input} name={'lookingForAJob'} type={'checkbox'}  /></div>\r\n                </div>\r\n                <div>\r\n                    <div><span>Looking for a job description:</span></div>\r\n                    <div><Field component={Textarea}\r\n                                name={'lookingForAJobDescription'}\r\n                                placeholder={'Looking for a job description'}  /></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.profileContacts}>\r\n                <div className={s.profileContacts__title}>Contact Information :</div>\r\n                <hr/>\r\n                <div className={s.profileData}>\r\n                    {Object.keys(props.profile.contacts).map(key => {\r\n                        return <Contacts key={key} contactTitle={key} contactValue={\r\n                            <Field component={Input} name={'contacts.' + key} placeholder={key} />\r\n                        }/>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.postContent}>\r\n                <img\r\n                    src='https://illustrators.ru/uploads/illustration/image/1232594/main_%D1%8B%D1%8B%D1%8B%D1%8B.png'\r\n                    alt='' />\r\n                <div className={s.postMessage}>{props.message}</div>\r\n            </div>\r\n            <div>{props.likes} likes</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/formControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostBody);\r\n    }\r\n\r\n    let postElements = props.posts.map(p => <Post key={p.id} message={p.message} likes={p.likesCount}/>);\r\n\r\n\r\n    return (\r\n        <div className={s.PostBlock}>\r\n            <h3>My post</h3>\r\n\r\n            <AddNewPostReduxForm onSubmit={addPost}/>\r\n\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\nconst maxLength200 = maxLengthCreator(200);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'newPostBody'} component={Textarea} placeholder={'Enter new post'}\r\n                       validate={[required, maxLength200]} className={s.newPostBody}/>\r\n            </div>\r\n            <div>\r\n                <button className={'buttonStyle'}>Button</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({form: 'profileAddNewPost'})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText : state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch( addPostActionCreator(newPostBody) );\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userIcon from '../../../assets/photos/user_icon.png';\r\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEdit} from \"@fortawesome/free-solid-svg-icons\";\r\nimport MyPostsContainer from \"../MyPosts/MyPostsContainer\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    ;\r\n\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files[0]){\r\n            if (e.target.files[0].length != 0) {\r\n                props.savePhoto(e.target.files[0])\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(() => {\r\n            setEditMode(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.descriptionBlock__avatarBlockWrapper}>\r\n                    <div className={s.descriptionBlock__avatarBlock}>\r\n                        <div >\r\n                            <div className={s.descriptionBlock__imageWrapper}></div>\r\n                                <img src={props.profile.photos.large || userIcon}\r\n                                     className={s.descriptionBlock__image}\r\n                                     alt='' />\r\n                        </div>\r\n                        <div className={s.descriptionBlock__fullName}>{props.profile.fullName}</div>\r\n\r\n                        <div>{props.isOwner && <input type={'file'}\r\n                                                      className={s.changePhotoButton}\r\n                                                      onChange={onMainPhotoSelected}/>}</div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className={s.descriptionBlock__Info}>\r\n                        <div className={s.descriptionBlock__mainInfo}>\r\n                            <div className={s.descriptionBlock__fullName}>{props.profile.fullName}</div>\r\n                            <ProfileStatusWithHook status={props.status} updateStatus={props.updateStatus} isOwner={props.isOwner} />\r\n                        </div>\r\n                        {editMode\r\n                            ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/>\r\n                            : <ProfileData goToEditMode={() => {\r\n                                setEditMode(true)\r\n                            }}\r\n                                           profile={props.profile}\r\n                                           isOwner={props.isOwner}/>\r\n                        }\r\n\r\n                    </div>\r\n                    <MyPostsContainer />\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return <div>\r\n        {props.isOwner && <div>\r\n            <button className={'buttonStyle'} onClick={props.goToEditMode}>\r\n                <FontAwesomeIcon className={s.profileIcon} icon={faEdit} fixedWidth />\r\n                edit\r\n            </button>\r\n        </div>}\r\n\r\n        <div className={s.profileContacts__title}>Main Information :</div>\r\n        <hr/>\r\n        <div className={s.profileData}>\r\n            <div>\r\n                <div><span>AboutMe :</span></div>\r\n                <div className={s.profileData__userInfo}>{props.profile.aboutMe}</div>\r\n            </div>\r\n            <div>\r\n                <div><span>Looking for a job :</span></div>\r\n                <div className={s.profileData__userInfo}>{props.profile.lookingForAJob ? 'yes' : 'no'}</div>\r\n            </div>\r\n            <div>\r\n                <div><span>Looking for a job description :</span></div>\r\n                <div className={s.profileData__userInfo}>\r\n                    {props.profile.lookingForAJob && props.profile.lookingForAJobDescription}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <div className={s.profileContacts}>\r\n            <div className={s.profileContacts__title}>Contact Information :</div>\r\n            <hr/>\r\n            <div className={s.profileData}>\r\n                {Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contacts key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const Contacts = ({contactTitle, contactValue}) => {\r\n    return <div><div><span>{contactTitle} : </span></div> <div className={s.profileData__userInfo}>{contactValue}</div></div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfile={props.saveProfile}/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router\";\r\n//import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile () {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId){\r\n            userId = this.props.autorisedUserId;\r\n            if(!userId){\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                isOwner = { !this.props.match.params.userId }/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        autorisedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}