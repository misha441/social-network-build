{"version":3,"sources":["components/common/formControls/FormControls.module.css","assets/photos/user_icon.png","components/Navbar/Navbar.module.css","components/Users/users.module.css","redux/dialogsReducer.js","api/api.js","components/common/Preloader/preloader.module.css","components/Login/Login.module.css","reportWebVitals.js","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/UserSearcher.jsx","components/Users/Users.jsx","redux/usersReducer.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","assets/photos/logo.png","components/Header/Header.jsx","redux/authReducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/appReducer.js","redux/sidebarReducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","components/common/formControls/FormControls.jsx","assets/photos/preloader.svg","components/common/Preloader/Preloader.jsx","utils/validators/validators.js","redux/profileReducer.js"],"names":["module","exports","SEND_MESSAGE","SET_CURRENT_PAGE","SET_DIALOGS_LIST","SET_MESSAGES","SET_USER_ID","SET_USER_INFO","TOGGLE_IS_FETCHING","initialState","selectedUserId","selectedUserPhoto","small","large","selectedUserFullName","dialogs","messages","currentPage","pageSize","isFetching","sendMessageCreator","newMessageBody","type","setMessages","setSelectedUserId","userId","toggleIsFetching","getFriends","dispatch","a","dialogsAPI","getAllDialogs","response","data","getMessages","getSelectedUserInfo","items","profileAPI","getProfile","photo","photos","fullName","sendMessage","message","dialogsReducer","state","action","body","id","pageNumber","instanse","axios","withCredentials","headers","baseURL","userAPI","getUsers","term","get","then","unfollow","delete","follow","post","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profileInfo","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrlApi","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","s","navbar","navbarNav","navContent","to","activeClassName","active","navbarIcon","icon","faUser","fixedWidth","faEnvelope","faUserFriends","faNewspaper","faMusic","faSlidersH","Paginator","React","memo","props","pageCount","Math","ceil","totalUsersCount","pageUsersSize","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginatorWrapper","paginatorbuttonStyle","onClick","paginatorIcon","faAngleLeft","pageNumbersBlock","filter","p","map","selectedPage","pageNumbers","onPageChanged","faAngleRight","User","userBlock","usersPhoto__wrapper","user","src","userPhoto","usersPhoto","alt","userBlock__toDialogButton","usersMessageIcon","faCommentDots","userBlock__info","userBlock__fullName","name","userBlock__status","followBtnWrapper","followed","disabled","UsersInFollowingProgress","some","followBtn","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","usersSearcherWrapper","Field","component","Input","inputSearch","placeholder","usersSearchButton","searchIcon","faSearch","Users","console","log","users","usersWrapper","requestUsers","userBlocksWrapper","Preloader","length","userBlocks","u","nothingFoundText","FOLLOW","UNFOLLOW","SET_USERS","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FOLLOWING_PROGRESS","SET_TERM_VALUE","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","count","toggleFollowingProgress","setTermValue","followUnfollowFlow","apiMethod","actionCreator","resultCode","usersReducer","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getUsersInFollowingProgress","getTermValue","UsersContainer","this","Component","compose","connect","totalCount","News","Music","Settings","Header","header","header__inner","header_logo","mainLogo","loginBlock","isAuth","loginBlock__name","cn","headerButton","headerIcon","faSignOutAlt","loginBlock__Login","SET_USER_DATA","SET_USER_PHOTO","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setUserData","getCaptchaUrlSuccess","getAuthUserData","responseProfile","HeaderContainer","auth","maxLength40","maxLengthCreator","loginInputWrapper","loginInputBlock","loginIcon","loginInput","validate","required","faLock","formCheckbox","error","formSummaryError","faKey","loginButton","url","stopSubmit","_error","loginFormWrapper","loginTitle","INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","redusers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","authReducer","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspence","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","AppWrapper","withRouter","initializeApp","promise","Promise","all","useEffect","exact","path","render","MainApp","ReactDOM","document","getElementById","FormControl","input","meta","children","hasError","touched","formControl","Textarea","restProps","preloader","value","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_MESSAGE","SAVE_PHOTO_SUCCESS","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","errorMessage","includes","errorElement","split","toLowerCase","reject","newPost","postId"],"mappings":"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","file":"static/js/main.8a796203.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__113RY\",\"error\":\"FormControls_error__3PXSm\"};","export default __webpack_public_path__ + \"static/media/user_icon.706d8e43.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2sH5C\",\"navbarNav\":\"Navbar_navbarNav__2T6a2\",\"navContent\":\"Navbar_navContent__lFai7\",\"navbarIcon\":\"Navbar_navbarIcon__3dfF8\",\"active\":\"Navbar_active__1ABZS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersSearcherWrapper\":\"users_usersSearcherWrapper__2Q3Gn\",\"inputSearch\":\"users_inputSearch__55_MC\",\"usersSearchButton\":\"users_usersSearchButton__3FrS5\",\"searchIcon\":\"users_searchIcon__3ht8T\",\"usersPhoto__wrapper\":\"users_usersPhoto__wrapper__1mrCV\",\"usersPhoto\":\"users_usersPhoto__XcQZu\",\"usersWrapper\":\"users_usersWrapper__1LwDB\",\"userBlocksWrapper\":\"users_userBlocksWrapper__39cy_\",\"userBlocks\":\"users_userBlocks__3jEzU\",\"userBlock\":\"users_userBlock__3qewT\",\"followBtnWrapper\":\"users_followBtnWrapper__3o8Zk\",\"followBtn\":\"users_followBtn__1-rZe\",\"userBlock__info\":\"users_userBlock__info__3Witl\",\"userBlock__status\":\"users_userBlock__status__3oY4O\",\"userBlock__fullName\":\"users_userBlock__fullName__AUoTB\",\"userBlock__toDialogButton\":\"users_userBlock__toDialogButton__25RqB\",\"usersMessageIcon\":\"users_usersMessageIcon__2TxfG\",\"nothingFoundText\":\"users_nothingFoundText__3PEON\"};","import {dialogsAPI, profileAPI, userAPI} from \"../api/api\";\r\nimport {setUserProfile} from \"./profileReducer\";\r\n\r\nconst SEND_MESSAGE = 'dialog/SEND-MESSAGE';\r\nconst SET_CURRENT_PAGE = 'dialogs/SET_CURRENT_PAGE'\r\nconst SET_DIALOGS_LIST = 'SET_DIALOGS_LIST';\r\nconst SET_MESSAGES = 'SET_MESSAGES';\r\nconst SET_USER_ID = 'SET_USER_ID';\r\nconst SET_USER_INFO = 'SET_USER_INFO';\r\nconst TOGGLE_IS_FETCHING = 'dialogs/TOGGLE_IS_FETCHING';\r\n\r\nlet initialState = {\r\n    selectedUserId: null,\r\n    selectedUserPhoto: {small: null, large: null},\r\n    selectedUserFullName: null,\r\n    dialogs :  [ ],\r\n    messages : [ ],\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n    isFetching: false\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id:5 , message: body}]\r\n            }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.pageNumber}\r\n        }\r\n        case SET_DIALOGS_LIST:{\r\n                return {...state, dialogs: action.dialogs}\r\n        }\r\n        case SET_MESSAGES: {\r\n            return {...state, messages: action.messages}\r\n        }\r\n        case SET_USER_ID: {\r\n            return {...state, selectedUserId: action.userId}\r\n        }\r\n        case SET_USER_INFO: {\r\n            return {...state, selectedUserPhoto: action.photo, selectedUserFullName: action.fullName}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody});\r\nexport const setCurrentPage = (pageNumber) => ({type: SET_CURRENT_PAGE, pageNumber});\r\nexport const setDialogs = (dialogs) => ({type: SET_DIALOGS_LIST, dialogs});\r\nexport const setMessages = (messages) => ({type: SET_MESSAGES, messages});\r\nexport const setSelectedUserId = (userId) => ({type: SET_USER_ID, userId});\r\nexport const setSelectedUserPhoto = (photo, fullName) => ({type: SET_USER_INFO, photo, fullName});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\nexport const getFriends = () =>async (dispatch) => {\r\n    let response = await dialogsAPI.getAllDialogs()\r\n    dispatch(setDialogs(response.data))\r\n}\r\n\r\nexport const getMessages = (userId) =>async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(getSelectedUserInfo(userId));\r\n    let response = await dialogsAPI.getMessages(userId)\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setMessages(response.data.items))\r\n    dispatch(setSelectedUserId(userId))\r\n}\r\n\r\nexport const getSelectedUserInfo = (userId) =>async (dispatch) => {\r\n    const response = await profileAPI.getProfile(userId)\r\n    dispatch(setSelectedUserPhoto(response.data.photos, response.data.fullName));\r\n}\r\n\r\nexport const sendMessage = (userId, message) =>async (dispatch) => {\r\n    if(userId){\r\n        let response = await dialogsAPI.sendMessage(userId, message)\r\n        dispatch(getMessages(userId))\r\n        dispatch(getFriends())\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default dialogsReducer;","import * as axios from \"axios\";\r\n\r\nlet instanse = axios.create({\r\n    withCredentials: true,\r\n    headers: {'API-KEY':'8e4e8245-e26f-4f04-aad8-74bedbfe3233'},\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage, pageSize, term = ''){\r\n        return instanse.get(`users?page=${currentPage}&count=${pageSize}&term=${term}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getFriends(currentPage, pageSize){\r\n        return instanse.get(`users?page=${currentPage}&count=${pageSize}&friend=${true}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    unfollow(userId){\r\n        return instanse.delete(`follow/${userId}`)\r\n    },\r\n    follow(userId){\r\n        return instanse.post(`follow/${userId}`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId){\r\n        return instanse.get(`profile/` +userId)\r\n    },\r\n    getStatus(userId){\r\n        return instanse.get(`profile/status/`+ userId)\r\n    },\r\n    updateStatus(status){\r\n        return instanse.put('profile/status', {status})\r\n    },\r\n    savePhoto(photoFile){\r\n        let formData = new FormData()\r\n        formData.append('image', photoFile)\r\n\r\n        return instanse.put('profile/photo', formData, {\r\n            headers: {\"Content-Type\": \"multipart/form-data\"}\r\n        })\r\n    },\r\n    saveProfile(profileInfo){\r\n        return instanse.put('profile', profileInfo)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me(){\r\n        return instanse.get('auth/me')\r\n    },\r\n    login(email, password, rememberMe, captcha = null){\r\n        return instanse.post(`auth/login`,{email, password, rememberMe, captcha});\r\n    },\r\n    logout(){\r\n        return instanse.delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const dialogsAPI = {\r\n    getMessages(userId){\r\n        return instanse.get(`dialogs/${userId}/messages`)\r\n    },\r\n    sendMessage(userId, body){\r\n        return instanse.post(`dialogs/${userId}/messages`,{body});\r\n    },\r\n    getAllDialogs(){\r\n        return instanse.get(`dialogs`)\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrlApi(){\r\n        return instanse.get('security/get-captcha-url')\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__39cDm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginFormWrapper\":\"Login_loginFormWrapper__2OFO9\",\"loginTitle\":\"Login_loginTitle__20DNC\",\"loginIcon\":\"Login_loginIcon__vTCzo\",\"loginInputWrapper\":\"Login_loginInputWrapper__dU_bd\",\"loginInputBlock\":\"Login_loginInputBlock__1oBaY\",\"loginInput\":\"Login_loginInput__3v_Bm\",\"formCheckbox\":\"Login_formCheckbox__2bz4_\",\"formSummaryError\":\"Login_formSummaryError__De2Iu\",\"loginButton\":\"Login_loginButton__3v_Pl\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faEnvelope, faMusic, faNewspaper, faSlidersH, faUser, faUserFriends} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Navbar = () => {\r\n    return (<div className={s.navbar}>\r\n            <nav className={s.navbarNav}>\r\n                <li className={s.navContent}>\r\n                    <NavLink to='/profile' activeClassName={s.active}>\r\n                        <FontAwesomeIcon className={s.navbarIcon} icon={faUser} fixedWidth />\r\n                        Profile\r\n                    </NavLink>\r\n                </li>\r\n                <li className={`${s.navContent} ${s.active}`}>\r\n                    <NavLink to='/dialogs' activeClassName={s.active}>\r\n                        <FontAwesomeIcon className={s.navbarIcon} icon={faEnvelope} fixedWidth />\r\n                        Messages\r\n                    </NavLink>\r\n                </li>\r\n                <li className={`${s.navContent} ${s.active}`}>\r\n                    <NavLink to='/users' activeClassName={s.active}>\r\n                        <FontAwesomeIcon className={s.navbarIcon} icon={faUserFriends} fixedWidth />\r\n                        Users\r\n                    </NavLink>\r\n                </li>\r\n                <li className={s.navContent}>\r\n                    <NavLink to='/news' activeClassName={s.active}>\r\n                        <FontAwesomeIcon className={s.navbarIcon} icon={faNewspaper} fixedWidth />\r\n                        News\r\n                    </NavLink>\r\n                </li>\r\n                <li className={s.navContent}>\r\n                    <NavLink to='/music' activeClassName={s.active}>\r\n                        <FontAwesomeIcon className={s.navbarIcon} icon={faMusic}  fixedWidth />\r\n                        Music\r\n                    </NavLink>\r\n                </li>\r\n                <li className={s.navContent}>\r\n                    <NavLink to='/settings' activeClassName={s.active}>\r\n                        <FontAwesomeIcon className={s.navbarIcon} icon={faSlidersH} fixedWidth />\r\n                        Settings\r\n                    </NavLink>\r\n                </li>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport s from \"../../Navbar/Navbar.module.css\";\r\nimport {faAngleLeft, faAngleRight, faUser} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Paginator = React.memo((props) => {\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageUsersSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pageCount / props.pageSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = props.pageSize * (portionNumber - 1) + 1;\r\n    let rightPortionPageNumber = props.pageSize * portionNumber;\r\n\r\n    return (\r\n        <div className={styles.paginatorWrapper}>\r\n\r\n            {portionNumber > 1 &&\r\n            <button className={styles.paginatorbuttonStyle} onClick={() => {\r\n                setPortionNumber(portionNumber - 1)}}>\r\n                <FontAwesomeIcon className={styles.paginatorIcon} icon={faAngleLeft} fixedWidth />\r\n            </button>}\r\n\r\n            <div className={styles.pageNumbersBlock}>\r\n                {pages\r\n                    .filter(p => p <= rightPortionPageNumber && p >= leftPortionPageNumber)\r\n                    .map(p => {\r\n                        return <span key={p}\r\n                                     className={`${props.currentPage === p && styles.selectedPage} ${styles.pageNumbers}`}\r\n                                     onClick={() => {\r\n                                         props.onPageChanged(p)\r\n                                     }}>{p}</span>\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            {portionCount > portionNumber &&\r\n            <button className={styles.paginatorbuttonStyle} onClick={() => {\r\n                setPortionNumber(portionNumber + 1)}}>\r\n                <FontAwesomeIcon className={styles.paginatorIcon} icon={faAngleRight} fixedWidth />\r\n            </button>}\r\n\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from './users.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../assets/photos/user_icon.png\";\r\nimport s from \"../Navbar/Navbar.module.css\";\r\nimport {faCommentDots} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst User = (props) => {\r\n    return (\r\n        <div key={props.user.id} className={styles.userBlock}>\r\n            <div>\r\n                <div className={styles.usersPhoto__wrapper}>\r\n                    <NavLink to={'/profile/' + props.user.id}>\r\n                        <img src={props.user.photos.small != null ? props.user.photos.small : userPhoto}\r\n                             className={styles.usersPhoto}\r\n                        alt='' />\r\n                    </NavLink>\r\n                    <div className={styles.userBlock__toDialogButton}>\r\n                        <NavLink to={'/dialogs/' + props.user.id}>\r\n                            <FontAwesomeIcon className={styles.usersMessageIcon} icon={faCommentDots} fixedWidth />\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={styles.userBlock__info}>\r\n                <div>\r\n                    <NavLink className={styles.userBlock__fullName} to={'/profile/' + props.user.id}>\r\n                        <div>{props.user.name}</div>\r\n                    </NavLink>\r\n                    <div className={styles.userBlock__status}>{props.user.status}</div>\r\n                </div>\r\n                <div className={styles.followBtnWrapper}>\r\n                    <div>{props.user.followed ?\r\n                        <button disabled={props.UsersInFollowingProgress.some(id => id == props.user.id)}\r\n                                className={styles.followBtn} onClick={() => {\r\n                            props.unfollow(props.user.id)\r\n                        }}>Unfollow</button> :\r\n                        <button disabled={props.UsersInFollowingProgress.some(id => id == props.user.id)}\r\n                                className={styles.followBtn} onClick={() => {\r\n                            props.follow(props.user.id)\r\n                        }}>Follow</button>}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/formControls/FormControls\";\r\nimport styles from \"./users.module.css\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst UserSearcher = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div className={styles.usersSearcherWrapper}>\r\n            <Field component={Input} className={styles.inputSearch} name={'term'}\r\n                   placeholder={'user name'} type={'text'} />\r\n            <div>\r\n                <button className={styles.usersSearchButton}>\r\n                    <FontAwesomeIcon className={styles.searchIcon} icon={faSearch} fixedWidth />\r\n                    Search\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(UserSearcher);\r\n\r\nexport default LoginReduxForm;\r\n\r\n","import React from 'react';\r\nimport styles from './users.module.css';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport UserSearcher from \"./UserSearcher\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Users = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.requestUsers(1, props.pageSize, formData.term)\r\n    }\r\n    console.log(props.users)\r\n    return <div className={styles.usersWrapper}>\r\n        <div>\r\n            <UserSearcher onSubmit={onSubmit}/>\r\n        </div>\r\n        <div>\r\n            <Paginator currentPage={props.currentPage} onPageChanged={props.onPageChanged}\r\n                       totalUsersCount={props.totalUsersCount}\r\n                       pageUsersSize={props.pageSize}\r\n                       pageSize={15}/>\r\n        </div>\r\n        <div className={styles.userBlocksWrapper}>\r\n            {props.isFetching ? <Preloader/> : null}\r\n            {props.users.length > 0\r\n                ? <div className={styles.userBlocks}>\r\n                    {props.users.map(u => <User key={u.id}\r\n                                                UsersInFollowingProgress={props.UsersInFollowingProgress}\r\n                                                follow={props.follow}\r\n                                                unfollow={props.unfollow} user={u}\r\n                                                isFetching={props.isFetching}/>)}\r\n                </div>\r\n                : <div className={styles.nothingFoundText}>nothing found</div>\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {userAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\nconst SET_TERM_VALUE = 'SET_TERM_VALUE';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 20,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    UsersInFollowingProgress: [],\r\n    term: ''\r\n}\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u) => {\r\n                    if (u.id === action.userId) {return {...u, followed: true}}\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u) => {\r\n                    if (u.id === action.userId) {return {...u, followed: false}}\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.pageNumber}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                UsersInFollowingProgress: action.isFetching\r\n                    ? [...state.UsersInFollowingProgress, action.userId]\r\n                    : state.UsersInFollowingProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        case SET_TERM_VALUE:\r\n            return {\r\n                ...state,\r\n                term: action.term\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (pageNumber) => ({type: SET_CURRENT_PAGE, pageNumber});\r\nexport const setTotalUsersCount = (count) => ({type: SET_TOTAL_USERS_COUNT, count});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\nexport const setTermValue = (term) => ({type: SET_TERM_VALUE, term});\r\n\r\n\r\nexport const requestUsers = (currentPage, pageSize, term = '') => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(setTermValue(term));\r\n        userAPI.getUsers(currentPage, pageSize, term)\r\n            .then(data => {\r\n                dispatch(toggleIsFetching(false));\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalUsersCount(data.totalCount));\r\n            })\r\n    }\r\n}\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    const response = await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    const apiMethod = userAPI.follow;\r\n    const actionCreator = followSuccess;\r\n    followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    const apiMethod = userAPI.unfollow;\r\n    const actionCreator = unfollowSuccess;\r\n    followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n}\r\n\r\nexport default usersReducer;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(() => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getUsersInFollowingProgress = (state) => {\r\n    return state.usersPage.UsersInFollowingProgress\r\n}\r\n\r\nexport const getTermValue = (state) => {\r\n    return state.usersPage.term\r\n}\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    follow, requestUsers, setTermValue,\r\n    setUsers, toggleFollowingProgress, unfollow\r\n} from \"../../redux/usersReducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\n//import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getPageSize, getTermValue,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersInFollowingProgress\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        if (this.props.users.length === 0) {\r\n            const {currentPage, pageSize} = this.props;\r\n            this.props.requestUsers(currentPage, pageSize)\r\n        }\r\n    }\r\n\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize, this.props.term)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Users currentPage={this.props.currentPage}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   pageSize={this.props.pageSize}\r\n                   onPageChanged={this.onPageChanged}\r\n                   toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                   UsersInFollowingProgress={this.props.UsersInFollowingProgress}\r\n                   requestUsers={this.props.requestUsers}\r\n                   isFetching={this.props.isFetching}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        UsersInFollowingProgress: getUsersInFollowingProgress(state),\r\n        term: getTermValue(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setUsers,toggleFollowingProgress,\r\n        requestUsers, setTermValue})\r\n)(UsersContainer);","import React from 'react';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","export default __webpack_public_path__ + \"static/media/logo.73200dc5.png\";","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport mainLogo from '../../assets/photos/logo.png';\r\nimport cn from 'classnames';\r\nimport {faSignOutAlt, faUser} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={'container'}>\r\n                <div className={s.header__inner}>\r\n                    <img className={s.header_logo} src={mainLogo} alt=''/>\r\n                    <div className={s.loginBlock}>\r\n                        {props.isAuth\r\n                            ? <div><span className={s.loginBlock__name}>{props.login}</span>\r\n                                <button className={cn('buttonStyle', s.headerButton)} onClick={props.logout}>\r\n                                    <FontAwesomeIcon className={s.headerIcon} icon={faSignOutAlt} fixedWidth />\r\n                                    Log out\r\n                                </button></div>\r\n                            : <NavLink className={s.loginBlock__Login} to={'/login'}>Login</NavLink>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authAPI, profileAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst SET_USER_PHOTO = 'auth/SET_USER_PHOTO';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    photos: {small: null, large: null},\r\n    isAuth: false,\r\n    captchaUrl : null\r\n}\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n        case SET_USER_PHOTO:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserData = (id, login, email, isAuth, captchaUrl) => ({type: SET_USER_DATA,\r\n    data: {id, login, email, isAuth,captchaUrl}});\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({type: GET_CAPTCHA_URL_SUCCESS, data: {captchaUrl}});\r\nexport const setAuthUserPhoto = (photos) => ({type: SET_USER_PHOTO, data: {photos}});\r\n\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.me()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        const responseProfile = await profileAPI.getProfile(id)\r\n        dispatch(setUserData(id, login, email, true, null));\r\n        dispatch(setAuthUserPhoto(responseProfile.data.photos))\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrlApi();\r\n    console.log(response.data.url);\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10){\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logout} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n    render(){\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps,{getAuthUserData, logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/formControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport styles from './Login.module.css';\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport cn from 'classnames';\r\nimport s from \"../Navbar/Navbar.module.css\";\r\nimport {faKey, faLock, faUser} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst maxLength40 = maxLengthCreator(40)\r\n\r\nconst LoginForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div className={styles.loginInputWrapper}>\r\n            email :\r\n            <div className={styles.loginInputBlock}>\r\n                <div>\r\n                    <FontAwesomeIcon className={styles.loginIcon} icon={faUser} fixedWidth />\r\n                    <Field component={Input} className={styles.loginInput} type={'text'} validate={[required,maxLength40]}\r\n                           name={'email'} placeholder={'email'} />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <div className={styles.loginInputWrapper}>\r\n            password :\r\n            <div className={styles.loginInputBlock}>\r\n                <div>\r\n                    <FontAwesomeIcon className={styles.loginIcon} icon={faLock} fixedWidth />\r\n                    <Field component={Input} className={styles.loginInput} validate={[required,maxLength40]} name={'password'}\r\n                           placeholder={'password'} type={'password'}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className={styles.formCheckbox}>\r\n            <Field component={Input} name={'rememberMe'} type={'checkbox'}/>remember me\r\n        </div>\r\n        {props.error && <div className={styles.formSummaryError}>{props.error}</div>}\r\n        <div>\r\n            {props.captchaUrl && <img src={props.captchaUrl} alt=''/>}\r\n            {props.captchaUrl &&\r\n            <div className={styles.loginInputBlock}>\r\n                <div>\r\n                    <FontAwesomeIcon className={styles.loginIcon} icon={faKey} fixedWidth />\r\n                    <Field name='captcha' className={styles.loginInput} component={Input} placeholder='Symbol from image' validate={[required]} />\r\n                </div>\r\n            </div>\r\n\r\n            }\r\n        </div>\r\n        <div>\r\n            <br/>\r\n            <button className={styles.loginButton}>Login</button>\r\n        </div>\r\n        mdm04dp12m\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if(props.isAuth){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.loginFormWrapper}>\r\n            <div>\r\n                <div className={styles.loginTitle}>Login</div>\r\n                <div>\r\n                    <LoginReduxForm captchaUrl={props.captchaUrl} onSubmit={onSubmit}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>)\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n     switch (action.type){\r\n         case INITIALIZED_SUCCESS:\r\n             return {\r\n                 ...state,\r\n                 initialized: true\r\n             }\r\n         default:\r\n             return state\r\n     }\r\n}\r\n\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n}\r\n\r\nexport default appReducer;","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\n\r\n\r\nlet redusers = combineReducers({\r\n    profilePage : profileReducer,\r\n    dialogsPage : dialogsReducer,\r\n    sidebar : sidebarReducer,\r\n    usersPage : usersReducer,\r\n    auth : authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(redusers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(redusers, applyMiddleware(thunkMiddleware));\r\n//\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\n\r\nconst withSuspence = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<h1>Loading profile...</h1>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n}\r\n\r\nexport default withSuspence;","import './App.css';\nimport React, {useEffect} from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport {BrowserRouter, Switch, Route, withRouter, Redirect} from 'react-router-dom';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {compose} from \"redux\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport withSuspence from \"./hoc/withSuspense\";\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nconst App = (props) => {\n    useEffect(() => {\n        props.initializeApp()\n    }, [])\n\n    if (!props.initialized) {\n        return <Preloader/>\n    }\n\n    return (\n        <div className='app-wrapper'>\n            <HeaderContainer/>\n            <div className={'container'}>\n                <div className={'mainContent'}>\n                    <Navbar/>\n                    <div className='app-wrapper-content'>\n                        <Switch>\n                            <Route exact path='/' render={() => <Redirect to={'/profile'}/>}/>\n                            <Route path='/dialogs/:userId?' render={withSuspence(DialogsContainer)}/>\n                            <Route path='/profile/:userId?' render={withSuspence(ProfileContainer)}/>\n                            <Route path='/users' render={() => <UsersContainer/>}/>\n                            <Route path='/news' render={() => <News/>}/>\n                            <Route path='/music' render={() => <Music/>}/>\n                            <Route path='/settings' render={() => <Settings/>}/>\n                            <Route path='/login' render={() => <Login/>}/>\n                        </Switch>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nconst AppWrapper = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp})\n)(App);\n\nconst MainApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppWrapper/>\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default MainApp;","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./App\";\n\n\nReactDOM.render(\n        <MainApp />,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginatorWrapper\":\"Paginator_paginatorWrapper__2Hcy0\",\"paginatorbuttonStyle\":\"Paginator_paginatorbuttonStyle__2iELC\",\"paginatorIcon\":\"Paginator_paginatorIcon__35O4m\",\"pageNumbersBlock\":\"Paginator_pageNumbersBlock__2Yldn\",\"pageNumbers\":\"Paginator_pageNumbers__2M3n7\",\"selectedPage\":\"Paginator_selectedPage__3HOcY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1fw8r\",\"header__inner\":\"Header_header__inner__3pMH0\",\"header_logo\":\"Header_header_logo__2T1fw\",\"loginBlock\":\"Header_loginBlock__11k5z\",\"loginBlock__Login\":\"Header_loginBlock__Login__1TvWC\",\"loginBlock__name\":\"Header_loginBlock__name__38atc\",\"headerButton\":\"Header_headerButton__34i61\",\"headerIcon\":\"Header_headerIcon__1jzr1\"};","import React from 'react';\r\nimport styles from './FormControls.module.css';\r\n\r\n\r\nconst FormControl = ({input, meta,children, ...props}) => {\r\n    let hasError = meta.error && meta.touched;\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            <div>\r\n                { hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/preloader.7c0ad768.svg\";","import preloader from '../../../assets/photos/preloader.svg';\r\nimport styles from './preloader.module.css';\r\n\r\nconst Preloader = (props) => {\r\n    return <div className={styles.preloader}>\r\n        <img src={preloader} alt=''/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","export const required = (value) => {\r\n    if(value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength ) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import {profileAPI, userAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst SET_STATUS = 'profile/SET_STATUS';\r\nconst DELETE_MESSAGE = 'profile/DELETE_MESSAGE';\r\nconst SAVE_PHOTO_SUCCESS = 'profile/SAVE_PHOTO_SUCCESS'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 14},\r\n        {id: 2, message: 'It\\'s my life', likesCount: 50},\r\n        {id: 3, message: 'Ha-ha-ha', likesCount: 21}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                newPostText: '',\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS:\r\n            return {...state, status: action.status}\r\n        case DELETE_MESSAGE:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state,profile: {...state.profile, photos: action.photos} }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_MESSAGE, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    dispatch(setStatus(status))\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profileInfo) => async (dispatch, getState) => {\r\n    let userId = getState().auth.id;\r\n    const response = await profileAPI.saveProfile(profileInfo)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId))\r\n    } else {\r\n        let errorMessage = response.data.messages[0]\r\n        if (errorMessage.includes('Invalid url format')){\r\n            let errorElement = errorMessage.split(' ')[errorMessage.split(' ').length - 1]\r\n                .split(')')[0].split('>')[1].toLowerCase()\r\n            dispatch( stopSubmit('edit-profile', {'contacts': {[errorElement] : 'Invalid url format'}}) )\r\n        } else {\r\n            dispatch( stopSubmit('edit-profile', {_error: errorMessage}) )\r\n        }\r\n\r\n        return Promise.reject(errorMessage)\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}